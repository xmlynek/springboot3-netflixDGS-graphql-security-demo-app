plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.8'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.netflix.dgs.codegen' version '5.6.6'
    id "io.freefair.lombok" version "6.5.0-rc1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.0'))
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure'

    implementation 'net.datafaker:datafaker:1.7.0'
    implementation 'org.ocpsoft.prettytime:prettytime:5.0.1.Final'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly "org.projectlombok:lombok:1.18.24"
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}

generateJava {
    packageName = 'com.course.graphql.generated'
    generateClient = true
    typeMapping = [
            "Date": "java.time.LocalDate",
            "NonNegativeInt": "java.lang.Integer",
            "Url": "java.net.URL",
            "DateTime": "java.time.OffsetDateTime"
    ]
}